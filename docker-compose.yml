services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: sensor_user
      POSTGRES_PASSWORD: taichi
      POSTGRES_DB: sensor-observations-database
    volumes:
      #- pgdata:/var/lib/postgresql/data
      - ./server/database/initialize.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  replica1:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5
    build: ./server
    ports:
    - "3000:3000"
    #container_name: replica1
    depends_on:
      - postgres

  replica2:
    build: ./server
    #container_name: replica2
    depends_on:
      - postgres

  replica3:
    build: ./server
    #container_name: replica3
    depends_on:
      - postgres
  replica4:
    build: ./server
    depends_on:
      - postgres
  replica5:
    build: ./server
    #container_name: replica3
    depends_on:
      - postgres

  nginx:
    image: nginx:alpine
    restart: on-failure
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - replica1
      - replica2
      - replica3
      - replica4
      - replica5
  redis:
    image: redis:6.2.5-alpine

  # k6:
  #   image: grafana/k6
  #   volumes:
  #     - ./k6:/scripts
  #   entrypoint: ["k6", "run", "/scripts/load-pressure-simulation.js"]
  #   depends_on:
  #     - nginx

volumes:
  pgdata:
